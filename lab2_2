#include <iostream>
#include <stdio.h>
#include <fstream>
using namespace std;

int main()
{
    int short rlz1 = 2354;  // Начальное состояние РЛЗ1
    int short bit_gamma = 0;          // Символ выходной последовательности такте
    int short buffer = 0;             // Переменная для переноса числа в другую ячейку массива
    int short par = 0;
    long long int rlz2[2] = { 17223582144,652183174759146297 };   //Начальное состояние РЛЗ2
    long long int mask = 0;
    long long int data = 0;
    long long int gamma = 0;              // Выходная последовательность бит
    char name[16] = {};
    cout << "imya faila dlya zapisi ";
    cin >> name;
    cout << "Vvedite imya faila s posledovatelnostyu ";
    cin >> par;
    ofstream out("qqq.txt", ios::binary);
    ifstream in("tmp.txt", ios::binary);
    while (in.read((char*)&data, sizeof(long long int))) {
        // while (true)
        {
            if (par >= 0) {
                for (int i = 0; i < 64; i++) {
                    gamma = gamma << 1;
                    bit_gamma = ((((rlz1 >> 17) ^ (rlz1 >> 14)) & 0x1) ^ (((rlz2[0] >> 47) ^ (rlz2[0] >> 37)) & 0x1));
                    gamma = gamma + bit_gamma;
                    rlz1 = rlz1 << 1;
                    rlz1 = rlz1 + (((rlz1 >> 17) ^ (rlz1 >> 14)) & 0x1);   // Запись бита обратной связи
                    buffer = (rlz2[1] >> 63) & 0x1;
                    rlz2[0] = rlz2[0] << 1;
                    rlz2[1] = rlz2[1] << 1;
                    rlz2[0] = rlz2[0] + buffer;
                    rlz2[1] = rlz2[1] + (((rlz2[0] >> 47) ^ (rlz2[0] >> 37)) & 0x1);   // Запись бита обратной связи
                }
                par--;
                mask = data ^ gamma;
                cout << mask;
                out.write((char*)&mask, sizeof(long long int));
            }
        }
    }
    in.close();
    out.close();
    remove(name);
    rename("qqq.txt", name);
    return 0;
}
